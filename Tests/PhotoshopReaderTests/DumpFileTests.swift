import XCTest
@testable import PhotoshopReader

final class DumpFileTests: XCTestCase {
    func testDumpPsd() throws {
        var files: [(String, String)] = []
        
        /* https://github.com/aspose-psd/Aspose.PSD-for-.NET */
        files.append(("2Layers_psb", "psb"))
        files.append(("big", "psb"))
        files.append(("little", "psb"))
        files.append(("psb", "psb"))
        files.append(("psb3", "psb"))
        files.append(("Simple", "psb"))
        files.append(("Two_images_result_out", "psd"))
        files.append(("ee", "psd"))
        files.append(("example1", "psd"))
        files.append(("example2", "psd"))
        files.append(("aspose_sample", "psd"))
        files.append(("aspose_samplePsd", "psd"))
        files.append(("aspose_PsdExample", "psd"))
        files.append(("PsdNet1Result", "psd"))
        files.append(("PsdResult", "psd"))
        files.append(("1", "psd"))
        files.append(("1280px-Zebras_Serengeti", "psd"))
        files.append(("A", "psd"))
        files.append(("ALotOfElementTypes", "psd"))
        files.append(("AddColorBalanceAdjustmentLayer", "psd"))
        files.append(("AddStrokeEffect", "psd"))
        files.append(("AllLclrResourceColors", "psd"))
        files.append(("AllLclrResourceColorsReversed", "psd"))
        files.append(("Apple", "psd"))
        files.append(("BackgroundColorResourceInput", "psd"))
        files.append(("BlackWhiteAdjustmentLayerStripesMask", "psd"))
        files.append(("BlackWhiteAdjustmentLayerStripesMask2", "psd"))
        files.append(("BorderInformationResourceInput", "psd"))
        files.append(("BrightnessContrastModern", "psd"))
        files.append(("BrightnessContrastModernChanged", "psd"))
        files.append(("BrightnessContrastPS6", "psd"))
        files.append(("ChannelMixerAdjustmentLayer", "psd"))
        files.append(("ChannelMixerAdjustmentLayerChanged", "psd"))
        files.append(("ChannelMixerAdjustmentLayerCmyk", "psd"))
        files.append(("ChannelMixerAdjustmentLayerCmykChanged", "psd"))
        files.append(("ChannelMixerAdjustmentLayerRgb", "psd"))
        files.append(("ChannelMixerAdjustmentLayerRgbChanged", "psd"))
        files.append(("ClippingMaskComplex", "psd"))
        files.append(("ClippingMaskRegular", "psd"))
        files.append(("Cloud_AzPlat_Banner3A_SB_EN_US_160x600_chinese_font", "psd"))
        files.append(("CmykWithAlpha", "psd"))
        files.append(("Color", "psd"))
        files.append(("ColorBalance", "psd"))
        files.append(("ColorDodge", "psd"))
        files.append(("ColorFillLayer", "psd"))
        files.append(("ColorOverlay", "psd"))
        files.append(("ColorOverlayAndShadowAndMask", "psd"))
        files.append(("ColorOverlayChanged", "psd"))
        files.append(("Colorburn", "psd"))
        files.append(("ComplexGradientFillLayer", "psd"))
        files.append(("CropTest", "psd"))
        files.append(("CurvesAdjustmentLayer", "psd"))
        files.append(("CurvesAdjustmentLayer1", "psd"))
        files.append(("CurvesAdjustmentLayerChanged1", "psd"))
        files.append(("Darken", "psd"))
        files.append(("DarkerColor", "psd"))
        files.append(("Difference", "psd"))
        files.append(("DifferentLayerMasks_Source", "psd"))
        files.append(("Dissolve", "psd"))
        files.append(("Divide", "psd"))
        files.append(("EmptyRectangle", "psd"))
        files.append(("EmptyRectangle_changed", "psd"))
        files.append(("Exclusion", "psd"))
        files.append(("ExportLayerGroupToImageSample", "psd"))
        files.append(("ExposureAdjustmentLayer", "psd"))
        files.append(("ExposureAdjustmentLayerChanged", "psd"))
        files.append(("FillLayerGradient", "psd"))
        files.append(("FillOpacitySample", "psd"))
        files.append(("FillOpacitySampleChanged", "psd"))
        files.append(("GST-CHALLAN(2)1.", "psd"))
        files.append(("GradientOverlay", "psd"))
        files.append(("GradientOverlayChanged", "psd"))
        files.append(("HardLight", "psd"))
        files.append(("HardMix", "psd"))
        files.append(("HasFont", "psd"))
        files.append(("Hue", "psd"))
        files.append(("HueSaturationAdjustmentLayer", "psd"))
        files.append(("HueSaturationAdjustmentLayerChanged", "psd"))
        files.append(("ImageWithTextLayer", "psd"))
        files.append(("InvertAdjustmentLayer", "psd"))
        files.append(("InvertStripes_before", "psd"))
        files.append(("Korean_layers", "psd"))
        files.append(("LayerWithText", "psd"))
        files.append(("Layered PSD file smart objects", "psd"))
        files.append(("LayeredSmartObjects16bit", "psd"))
        files.append(("LayeredSmartObjects8bit2", "psd"))
        files.append(("LevelsAdjustmentLayer", "psd"))
        files.append(("LevelsAdjustmentLayerChanged", "psd"))
        files.append(("LevelsAdjustmentLayerRgb", "psd"))
        files.append(("LevelsAdjustmentLayerRgbChanged", "psd"))
        files.append(("Lighten", "psd"))
        files.append(("LightenColor", "psd"))
        files.append(("LinearBurn", "psd"))
        files.append(("LinearDodgeAdd", "psd"))
        files.append(("LinearLight", "psd"))
        files.append(("LinkedLayerexample", "psd"))
        files.append(("Luminosity", "psd"))
        files.append(("MaskComplex", "psd"))
        files.append(("MergedLayersFromTwoDifferentPsd", "psd"))
        files.append(("Multiply", "psd"))
        files.append(("Normal", "psd"))
        files.append(("OneLayer", "psd"))
        files.append(("OneLayerEdited", "psd"))
        files.append(("Overlay", "psd"))
        files.append(("PathOperationsShape", "psd"))
        files.append(("PatternFillLayer", "psd"))
        files.append(("PatternOverlay", "psd"))
        files.append(("PatternOverlayChanged", "psd"))
        files.append(("PhotoExample", "psd"))
        files.append(("PhotoExampleAddedExposure", "psd"))
        files.append(("PhotoExampleAddedHueSaturation", "psd"))
        files.append(("PhotoExampleAddedPhotoFilter", "psd"))
        files.append(("PhotoFilterAdjustmentLayer", "psd"))
        files.append(("PhotoFilterAdjustmentLayerChanged", "psd"))
        files.append(("PinLight", "psd"))
        files.append(("PsdConvertToExample", "psd"))
        files.append(("PsdConvertToPdfExample", "psd"))
        files.append(("PsdConvertToPngExample", "psd"))
        files.append(("PsdExample", "psd"))
        files.append(("PsdImage", "psd"))
        files.append(("PtFlResource_Edited", "psd"))
        files.append(("Rectangle", "psd"))
        files.append(("SampleForClblResource", "psd"))
        files.append(("SampleForInfxResource", "psd"))
        files.append(("SampleForLspfResource", "psd"))
        files.append(("Saturation", "psd"))
        files.append(("Screen", "psd"))
        files.append(("Shadow", "psd"))
        files.append(("ShadowChanged", "psd"))
        files.append(("SheetColorHighlightExample", "psd"))
        files.append(("SheetColorHighlightExampleChanged", "psd"))
        files.append(("SoCoResource_Edited", "psd"))
        files.append(("SoftLight", "psd"))
        files.append(("Stripes", "psd"))
        files.append(("Stroke", "psd"))
        files.append(("StrokeComplex", "psd"))
        files.append(("StrokeGradientChanged", "psd"))
        files.append(("StrokePatternChanged", "psd"))
        files.append(("Subtract", "psd"))
        files.append(("ThreeColorsParagraphs", "psd"))
        files.append(("ThreeRegularLayers", "psd"))
        files.append(("ThreeRegularLayersChanged", "psd"))
        files.append(("ThreeRegularLayersSemiTransparent", "psd"))
        files.append(("ThreeRegularLayersSemiTransparentFlattened", "psd"))
        files.append(("ThreeRegularLayersSemiTransparentFlattenedLayerByLayer", "psd"))
        files.append(("TransformedText", "psd"))
        files.append(("VectorOriginationDataResource", "psd"))
        files.append(("VividLight", "psd"))
        files.append(("White 3D Text Effect", "psd"))
        files.append(("WorkingPathResourceInput", "psd"))
        files.append(("WorkingPathResourceOutput", "psd"))
        files.append(("argb16bit_5x5", "psd"))
        files.append(("argb16bit_5x5_no_layers", "psd"))
        files.append(("argb8bit_5x5", "psd"))
        files.append(("argb8bit_5x5_no_layers", "psd"))
        files.append(("asposeImage02", "psd"))
        files.append(("aspose_out", "psd"))
        files.append(("clip", "psd"))
        files.append(("cmyk16bit_5x5_no_layers", "psd"))
        files.append(("cub16bit_cmyk", "psd"))
        files.append(("example", "psd"))
        files.append(("gradientOverlayEffect", "psd"))
        files.append(("aspose_grayscale16bit", "psd"))
        files.append(("grayscale5x5", "psd"))
        files.append(("inRgb16", "psd"))
        files.append(("index8bit_5x5", "psd"))
        files.append(("inline_formatting", "psd"))
        files.append(("innershadow", "psd"))
        files.append(("innershadow_out", "psd"))
        files.append(("layers with names", "psd"))
        files.append(("layers", "psd"))
        files.append(("new_panama-papers-4", "psd"))
        files.append(("new_panama-papers-8-trans4", "psd"))
        files.append(("photooverlay_5_new", "psd"))
        files.append(("psdnet256", "psd"))
        files.append(("r-embedded-bmp", "psd"))
        files.append(("r-embedded-gif", "psd"))
        files.append(("r-embedded-jpeg", "psd"))
        files.append(("r-embedded-jpeg2000", "psd"))
        files.append(("r-embedded-png", "psd"))
        files.append(("r-embedded-psd", "psd"))
        files.append(("r-embedded-tiff", "psd"))
        files.append(("r-embedded-transform", "psd"))
        files.append(("r3-embedded", "psd"))
        files.append(("rgb8_2x2_asset_linked", "psd"))
        files.append(("rgb8_2x2_embedded_png", "psd"))
        files.append(("rgb8_2x2_linked", "psd"))
        files.append(("rgb8_2x2_linked2", "psd"))
        files.append(("sample", "psd"))
        files.append(("samplePsd", "psd"))
        files.append(("sample_bicubic", "psd"))
        files.append(("sample_konstanting", "psd"))
        files.append(("aspose_text", "psd"))
        files.append(("text212", "psd"))
        files.append(("text_ethalon_different_colors", "psd"))
        
        /* https://github.com/haraldk/TwelveMonkeys */
        files.append(("AlphaChannelSample_720x480", "psd"))
        files.append(("adobehq-2.5", "psd"))
        files.append(("adobehq-3.0", "psd"))
        files.append(("adobehq-5.5", "psd"))
        files.append(("adobehq-7.0", "psd"))
        files.append(("adobehq", "psd"))
        files.append(("adobehq_ind", "psd"))
        files.append(("adobehq_layers", "psd"))
        files.append(("adobehq_layers.v5.maxcompat", "psd"))
        files.append(("adobehq_layers.v5", "psd"))
        files.append(("buttons", "psd"))
        files.append(("circles", "psd"))
        files.append(("cmyk_16bits", "psd"))
        files.append(("cmyk_8bits", "psd"))
        files.append(("coral_fish", "psd"))
        files.append(("escenic-liquid-logo", "psd"))
        files.append(("fruit-cmyk-MeSa-resource", "psd"))
        files.append(("jugware-icon", "psd"))
        files.append(("long-layer-names", "psd"))
        files.append(("photoshopping", "psd"))
        files.append(("rgb-multichannel-no-transparency", "psd"))
        files.append(("test_bitmap", "psd"))
        files.append(("test_gray", "psd"))
        files.append(("test_gray16", "psd"))
        files.append(("test_grayscale_boxes", "psd"))
        files.append(("test_indexed", "psd"))
        files.append(("test_original", "psd"))
        files.append(("transp", "psd"))

        /* https://github.com/layervault/psd.rb */
        files.append(("psd_rb_comp-example", "psd"))
        files.append(("psd_rb_example-cmyk", "psd"))
        files.append(("psd_rb_example-greyscale", "psd"))
        files.append(("psd_rb_example-nocompat", "psd"))
        files.append(("psd_rb_example", "psd"))
        files.append(("psd_rb_example16", "psd"))
        files.append(("psd_rb_guides", "psd"))
        
        /* https://github.com/unXedDani/Artal */
        files.append(("artal_basic_data", "psd"))
        files.append(("artal_folder_test", "psd"))
        files.append(("artal_hierarchy", "psd"))
        files.append(("artal_sample", "psd"))
        files.append(("artal_unicode_names", "psd"))
        
        /* https://github.com/MolecularMatters/psd_sdk */
        files.append(("psd_sdk_Sample", "psd"))
        
        /* https://github.com/ROORI92/Matlab-Photoshop-PSD-Writer-Reader */
        files.append(("output", "psd"))
        
        /* https://github.com/mdboom/pytoshop */
        files.append(("masked_layer", "psd"))
        
        /* https://github.com/oov/psd */
        files.append(("benchmark", "psd"))
        files.append(("bitmap", "psd"))
        files.append(("clipping", "psd"))
        files.append(("cmyk16bit", "psd"))
        files.append(("cmyk8bit", "psd"))
        files.append(("cmyk8bit_minmax", "psd"))
        files.append(("cmyk8bit_transparent", "psd"))
        files.append(("grayscale16bit", "psd"))
        files.append(("grayscale16bit_grad", "psd"))
        files.append(("grayscale16bit_transparent", "psd"))
        files.append(("grayscale32bit", "psd"))
        files.append(("grayscale8bit", "psd"))
        files.append(("grayscale8bit_transparent", "psd"))
        files.append(("group_layer", "psd"))
        files.append(("ibispaint", "psd"))
        files.append(("indexed", "psd"))
        files.append(("indexed_transparent", "psd"))
        files.append(("psd_mask", "psd"))
        files.append(("mod", "psd"))
        files.append(("mod2", "psd"))
        files.append(("photopea", "psd"))
        files.append(("psb_compat", "psb"))
        files.append(("psb_nocompat", "psb"))
        files.append(("psd_compat", "psd"))
        files.append(("psd_nocompat", "psd"))
        files.append(("rgb16bit", "psd"))
        files.append(("rgb32bit", "psd"))
        files.append(("rgb8bit+1ch", "psd"))
        files.append(("rgb8bit+1ch_transparent", "psd"))
        files.append(("rgb8bit+2ch+spot_transparent", "psd"))
        files.append(("rgb8bit", "psd"))
        files.append(("rgb8bit_nobg", "psd"))
        files.append(("rgb8bit_nobg_transparent", "psd"))
        files.append(("rgb8bit_nobg_transparent_medibang", "psd"))
        files.append(("sketchbook", "psd"))

        
        /* https://github.com/lavrovd/psd-reader */
        files.append(("epistemex_CMYK16", "psd"))
        files.append(("epistemex_CMYK8", "psd"))
        files.append(("epistemex_CMYKA16", "psd"))
        files.append(("epistemex_CMYKA8", "psd"))
        files.append(("epistemex_DUO8A", "psd"))
        files.append(("epistemex_G16", "psd"))
        files.append(("epistemex_G32", "psd"))
        files.append(("epistemex_G8", "psd"))
        files.append(("epistemex_GA16", "psd"))
        files.append(("epistemex_GA32", "psd"))
        files.append(("epistemex_GA8", "psd"))
        files.append(("epistemex_Indexed256T", "psd"))
        files.append(("epistemex_Indexed32T", "psd"))
        files.append(("epistemex_LAB16", "psd"))
        files.append(("epistemex_LAB8", "psd"))
        files.append(("epistemex_LABA16", "psd"))
        files.append(("epistemex_LABA8", "psd"))
        files.append(("epistemex_MultiChannel", "psd"))
        files.append(("epistemex_RGB16", "psd"))
        files.append(("epistemex_RGB32", "psd"))
        files.append(("epistemex_RGB8", "psd"))
        files.append(("epistemex_RGBA16", "psd"))
        files.append(("epistemex_RGBA32", "psd"))
        files.append(("epistemex_RGBA8", "psd"))
        files.append(("epistemex_bitmap", "psd"))
        files.append(("epistemex_indexed32", "psd"))
        
        /* https://github.com/tomieric/psd-viewer */
        files.append(("psd-viewer_test", "psd"))
        files.append(("psd-viewer_text", "psd"))
        
        /* https://github.com/psd-tools/psd-tools */
        files.append(("psd-tools_cmyk-blend-modes", "psd"))
        files.append(("psd-tools_color-burn", "psd"))
        files.append(("psd-tools_color-dodge", "psd"))
        files.append(("psd-tools_darken", "psd"))
        files.append(("psd-tools_darker-color", "psd"))
        files.append(("psd-tools_difference", "psd"))
        files.append(("psd-tools_dissolve", "psd"))
        files.append(("psd-tools_divide", "psd"))
        files.append(("psd-tools_exclusion", "psd"))
        files.append(("psd-tools_gray-blend-modes", "psd"))
        files.append(("psd-tools_hard-light", "psd"))
        files.append(("psd-tools_hard-mix", "psd"))
        files.append(("psd-tools_lighten", "psd"))
        files.append(("psd-tools_lighter-color", "psd"))
        files.append(("psd-tools_linear-burn", "psd"))
        files.append(("psd-tools_linear-dodge", "psd"))
        files.append(("psd-tools_linear-light", "psd"))
        files.append(("psd-tools_luminosity", "psd"))
        files.append(("psd-tools_multiply", "psd"))
        files.append(("psd-tools_normal", "psd"))
        files.append(("psd-tools_overlay", "psd"))
        files.append(("psd-tools_pass-through", "psd"))
        files.append(("psd-tools_pin-light", "psd"))
        files.append(("psd-tools_color", "psd"))
        files.append(("psd-tools_hue", "psd"))
        files.append(("psd-tools_rgb-blend-modes", "psd"))
        files.append(("psd-tools_saturation", "psd"))
        files.append(("psd-tools_screen", "psd"))
        files.append(("psd-tools_soft-light", "psd"))
        files.append(("psd-tools_subtract", "psd"))
        files.append(("psd-tools_vivid-light", "psd"))
        files.append(("4x4_16bit_cmyk", "psd"))
        files.append(("4x4_16bit_grayscale", "psd"))
        files.append(("4x4_16bit_lab", "psd"))
        files.append(("4x4_16bit_multichannel", "psd"))
        files.append(("4x4_16bit_rgb", "psd"))
        files.append(("4x4_1bit_bitmap", "psd"))
        files.append(("4x4_32bit_grayscale", "psd"))
        files.append(("4x4_32bit_rgb", "psd"))
        files.append(("4x4_8bit_cmyk", "psd"))
        files.append(("4x4_8bit_duotone", "psd"))
        files.append(("4x4_8bit_grayscale", "psd"))
        files.append(("4x4_8bit_index_color", "psd"))
        files.append(("4x4_8bit_lab", "psd"))
        files.append(("4x4_8bit_rgb", "psd"))
        files.append(("4x4_8bit_rgba", "psd"))
        files.append(("north_america_newspaper", "psd"))
        files.append(("shape-fx", "psd"))
        files.append(("shape-fx2", "psd"))
        files.append(("stroke-composite", "psd"))
        files.append(("stroke-effect-transparent-shape", "psd"))
        files.append(("stroke-effects", "psd"))
        files.append(("layers-minimal-gradient-fill", "psd"))
        files.append(("layers-minimal-pattern-fill", "psd"))
        files.append(("layers-minimal-pixel-layer", "psd"))
        files.append(("layers-minimal-shape-layer", "psd"))
        files.append(("layers-minimal-smartobject-layer", "psd"))
        files.append(("layers-minimal-solid-color-fill", "psd"))
        files.append(("layers-minimal-type-layer", "psd"))
        files.append(("black-and-white", "psd"))
        files.append(("brightness-contrast", "psd"))
        files.append(("channel-mixer", "psd"))
        files.append(("color-balance", "psd"))
        files.append(("color-lookup", "psd"))
        files.append(("curves-with-vectormask", "psd"))
        files.append(("curves", "psd"))
        files.append(("exposure", "psd"))
        files.append(("gradient-map", "psd"))
        files.append(("hue-saturation", "psd"))
        files.append(("invert", "psd"))
        files.append(("layers-gradient-fill", "psd"))
        files.append(("layers-group", "psd"))
        files.append(("levels", "psd"))
        files.append(("pattern-fill", "psb"))
        files.append(("pattern-fill", "psd"))
        files.append(("photo-filter", "psd"))
        files.append(("pixel-layer", "psd"))
        files.append(("posterize", "psd"))
        files.append(("selective-color", "psd"))
        files.append(("shape-layer", "psd"))
        files.append(("smartobject-layer", "psd"))
        files.append(("solid-color-fill", "psd"))
        files.append(("threshold", "psd"))
        files.append(("type-layer", "psd"))
        files.append(("vibrance", "psd"))
        files.append(("2", "psd"))
        files.append(("combine-group", "psd"))
        files.append(("combine", "psd"))
        files.append(("exclude-first", "psd"))
        files.append(("exclude-group", "psd"))
        files.append(("exclude", "psd"))
        files.append(("intersect-all", "psd"))
        files.append(("intersect-first", "psd"))
        files.append(("intersect-group", "psd"))
        files.append(("subtract-all", "psd"))
        files.append(("subtract-first", "psd"))
        files.append(("subtract-group", "psd"))
        files.append(("subtract-second", "psd"))
        files.append(("cactus_top", "psd"))
        files.append(("clip-opacity", "psd"))
        files.append(("fill-opacity", "psd"))
        files.append(("knockout-isolated-groups", "psd"))
        files.append(("transparency-group", "psd"))

        /* https://customerscanvas.com/docs/cc/psd-samples.htm */
        files.append(("customerscanvas_3d-preview-mockup", "psd"))
        files.append(("customerscanvas_bc2", "psd"))
        files.append(("customerscanvas_color-theme", "psd"))
        files.append(("customerscanvas_image-placeholders", "psd"))
        files.append(("customerscanvas_images", "psd"))
        files.append(("customerscanvas_multi-value-items", "psd"))
        files.append(("customerscanvas_placeholders-with-frames", "psd"))
        files.append(("customerscanvas_rich-text", "psd"))
        files.append(("customerscanvas_vector-shapes", "psd"))
        files.append(("customerscanvas_text", "psd"))
        
        for (name, fileExtension) in files {
            let data = try getData(name: name, fileExtension: fileExtension)
            let document = try PhotoshopDocument(data: data)
            print(document.header)
            print(document.colorModeData)
            for resource in document.imageResources.resources {
                let data = try ImageResourceBlockData(resource: resource)
                if resource.data.count >= 1024 {
                    print("\(resource.id.hexString): \(resource.data.count) bytes")
                } else {
                    print(data)
                }
            }
            
            if let layers = document.layerAndMaskInformation.layerInfo?.layers {
                for layer in layers {
                    for additionalInformation in layer.additionalLayerInformation {
                        let data = try AdditionalLayerInformationData(layer: additionalInformation)
                        if additionalInformation.data.count >= 1024 {
                            print("\(additionalInformation.key): \(additionalInformation.data.count) bytes")
                        } else {
                            print(data)
                        }
                    }
                }
            }
        }
    }

    static var allTests = [
        ("testDumpPsd", testDumpPsd),
    ]
}
